{"version":3,"sources":["../src/ajax_notification.js"],"names":["define","$","notification","ajax","templates","str","util","loginErrorShown","loggingOut","redirectInProgress","document","ready","click","ifErrorShowBestMsg","response","failAction","failMsg","dfd","Deferred","errorNotification","endfd","alert","M","get_string","backtrace","exception","errorstr","error","stacktrace","errorcode","message","resolve","promise","whenTrue","isvisible","is","jsonObj","JSON","parse","e","redirect","cfg","wwwroot","window","location","charteredcollegeTheme","forcePassChange","pwdChangeUrl","length","then","forcePwdWarning","render","result","html","type","async","data","sesskey","url","thisResp","loggedin","appendTo","confirm","loggedouttitle","loggedoutmsg","loggedoutcontinue"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   theme_charteredcollege\n * @author    Guy Thomas <osdev@blackboard.com>\n * @copyright Copyright (c) 2016 Blackboard Inc.\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/notification', 'core/ajax', 'core/templates', 'core/str', 'theme_charteredcollege/util'],\n\n    function($, notification, ajax, templates, str, util) {\n\n        // Module level variables.\n        var loginErrorShown = false;\n        var loggingOut = false;\n        var redirectInProgress = false;\n\n        // Module level code.\n        $(document).ready(function() {\n            $('#charteredcollege-pm-logout').click(function() {\n                loggingOut = true;\n            });\n        });\n\n        /**\n         * This feature is simply to work around this issue - MDL-54551.\n         * If the core moodle issue is ever fixed we might not require this module.\n         */\n        return {\n\n            /**\n             * If there is an error in this response then show the best error message for the user.\n             *\n             * @param {object} response\n             * @param {string} failAction\n             * @param {string} failMsg\n             * @returns {function} promise - resolves with a boolean (true if error shown)\n             */\n            ifErrorShowBestMsg: function(response, failAction, failMsg) {\n\n                var dfd = $.Deferred();\n\n                /**\n                 * Error notification function for non logged out issues.\n                 * @param {object} response\n                 * @returns {function} promise\n                 */\n                var errorNotification = function(response) {\n                    var endfd = $.Deferred();\n                    if (failMsg) {\n                        notification.alert(M.util.get_string('error', 'moodle'),\n                            failMsg, M.util.get_string('ok', 'moodle'));\n                    } else {\n                        if (response.backtrace) {\n                            notification.exception(response);\n                        } else {\n                            var errorstr;\n                            if (response.error) {\n                                errorstr = response.error;\n                                if (response.stacktrace) {\n                                    errorstr = '<div>' + errorstr + '<pre>' + response.stacktrace + '</pre></div>';\n                                }\n                            } else {\n                                if (response.errorcode && response.message) {\n                                    errorstr = response.message;\n                                } else {\n                                    // Don't display any error messages as we don't know what the error is.\n                                    endfd.resolve(false);\n                                    return endfd.promise();\n                                }\n                            }\n                            notification.alert(M.util.get_string('error', 'moodle'),\n                                errorstr, M.util.get_string('ok', 'moodle'));\n                        }\n                    }\n                    util.whenTrue(function() {\n                        var isvisible = $('.moodle-dialogue-base').is(':visible');\n                        return isvisible;\n                    }, function() {\n                        endfd.resolve(true);\n                    }, true);\n                    return endfd.promise();\n                };\n\n                if (loginErrorShown) {\n                    // We already have a login error message.\n                    dfd.resolve(true);\n                    return dfd.promise();\n                }\n\n                if (loggingOut) {\n                    // No point in showing error messages if we are logging out.\n                    dfd.resolve(true);\n                    return dfd.promise();\n                }\n\n                if (typeof response !== 'object') {\n                    try {\n                        var jsonObj = JSON.parse(response);\n                        response = jsonObj;\n                    } catch (e) {\n                        // Not caring about exceptions.\n                    }\n                }\n\n                if (typeof response === 'undefined') {\n                    // We don't know what the error was so don't show a useless unknown error dialog.\n                    return false;\n                }\n\n                if (response.errorcode && response.errorcode === \"sitepolicynotagreed\") {\n                    var redirect = M.cfg.wwwroot + '/user/policy.php';\n                    if (window.location != redirect && !redirectInProgress && $('#primary-nav').is(':visible')) {\n                        window.location = redirect;\n                        // Prevent further error messages from showing as a redirect is in progress.\n                        redirectInProgress = true;\n                        loginErrorShown = true;\n                        dfd.resolve(true);\n                    } else {\n                        dfd.resolve(false);\n                    }\n                    return dfd.promise();\n                }\n\n                if (response.error || response.errorcode) {\n\n                    if (M.charteredcollegeTheme.forcePassChange) {\n                        var pwdChangeUrl = M.cfg.wwwroot + '/login/change_password.php';\n                        // When a force password change is in effect, warn user in personal menu and redirect to\n                        // password change page if appropriate.\n                        if ($('#charteredcollege-pm-content').length) {\n                            str.get_string('forcepwdwarningpersonalmenu', 'theme_charteredcollege', pwdChangeUrl).then(\n                                function(forcePwdWarning) {\n                                    var alertMsg = {\"message\": forcePwdWarning, \"extraclasses\": \"force-pwd-warning\"};\n                                    return templates.render('core/notification_warning', alertMsg);\n                                }\n                            ).then(\n                                function(result) {\n                                    $('#charteredcollege-pm-content').html('<br />' + result);\n                                    dfd.resolve(true);\n                                }\n                            );\n                            if ($('#charteredcollege-pm-content').is(':visible')) {\n                                // If the personal menu is open then it should have a message in it informing the user\n                                // that they need to change their password to proceed.\n                                loginErrorShown = true;\n                                return dfd.promise();\n                            }\n                        }\n\n                        if (window.location != pwdChangeUrl) {\n                            window.location = pwdChangeUrl;\n                        }\n                        // Regardless of if error was shown, we only want this redirect to happen once so set\n                        // loginErrorShown to true.\n                        loginErrorShown = true;\n                        dfd.resolve(true);\n                        return dfd.promise();\n                    }\n\n                    // Ajax call login status function to see if we are logged in or not.\n                    // Note, we can't use a moodle web service for this ajax call because it will not provide\n                    // an error response that we can rely on - see MDL-54551.\n                    failAction = failAction ? failAction : '';\n                    return $.ajax({\n                        type: \"POST\",\n                        async: true,\n                        data: {\n                            \"sesskey\": M.cfg.sesskey,\n                            \"failedactionmsg\": failAction\n                        },\n                        url: M.cfg.wwwroot + '/theme/charteredcollege/rest.php?action=get_loginstatus'\n                    }).then(function(thisResp) {\n                        if (loginErrorShown) {\n                            dfd.resolve(true);\n                            return dfd.promise();\n                        }\n                        // Show login error message or original error message.\n                        if (!thisResp.loggedin) {\n                            // Hide ALL confirmation dialog 2nd buttons and close buttons.\n                            // Note - this is not ideal but at this point we need to log in anyway, so not\n                            // an issue.\n                            $('<style>' +\n                                '.confirmation-dialogue .confirmation-buttons input:nth-of-type(2), ' +\n                                '.moodle-dialogue-base.moodle-dialogue-confirm button.yui3-button.closebutton' +\n                                '{ display : none }' +\n                                '</style>'\n                            ).appendTo('head');\n                            notification.confirm(\n                                thisResp.loggedouttitle,\n                                thisResp.loggedoutmsg,\n                                thisResp.loggedoutcontinue,\n                                ' ',\n                                function() {\n                                    window.location = M.cfg.wwwroot + '/login/index.php';\n                                }\n                            );\n                            loginErrorShown = true;\n                            dfd.resolve(true);\n                            return dfd.promise();\n                        } else {\n                            // This is not a login issue, show original error message.\n                            return errorNotification(response); // Returns promise which is resolved when dialog shown.\n                        }\n                    });\n                }\n\n                dfd.resolve(false);\n                return dfd.promise();\n            }\n        };\n    }\n);\n"],"file":"ajax_notification.min.js"}