{"version":3,"sources":["../src/conversation_badge_count-lazy.js"],"names":["define","$","Ajax","self","init","userid","containerEl","queryCount","countUnreadConversations","args","promise","call","methodname","fail","resetCount","useridto","then","updateCount","count","text","removeClass","addClass"],"mappings":"AAyBAA,OAAM,4CAAC,CAAC,QAAD,CAAW,WAAX,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAkB,CACd,GAAIC,CAAAA,CAAI,CAAG,IAAX,CAMAA,CAAI,CAACC,IAAL,CAAY,SAASC,CAAT,CAAiB,CACzBF,CAAI,CAACE,MAAL,CAAcA,CAAd,CAEAF,CAAI,CAACG,WAAL,CAAmBL,CAAC,CAAC,2BAAD,CAApB,CACAE,CAAI,CAACI,UAAL,EACH,CALD,CAcAJ,CAAI,CAACK,wBAAL,CAAgC,SAASC,CAAT,CAAe,IAMvCC,CAAAA,CAAO,CAAGR,CAAI,CAACS,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,6CADF,CAEVH,IAAI,CAAEA,CAFI,CAKU,CAAV,EAAqB,CAArB,CAN6B,CAQ3CC,CAAO,CAACG,IAAR,CAAaV,CAAI,CAACW,UAAlB,EAEA,MAAOJ,CAAAA,CACV,CAXD,CAgBAP,CAAI,CAACI,UAAL,CAAkB,UAAW,CACzBJ,CAAI,CAACK,wBAAL,CAA8B,CAACO,QAAQ,CAAEZ,CAAI,CAACE,MAAhB,CAA9B,EAAuDW,IAAvD,CAA4Db,CAAI,CAACc,WAAjE,CACH,CAFD,CAQAd,CAAI,CAACc,WAAL,CAAmB,SAASC,CAAT,CAAgB,CAC/B,GAAY,CAAR,CAAAA,CAAJ,CAAe,CACXf,CAAI,CAACG,WAAL,CAAiBa,IAAjB,CAAsBD,CAAtB,EACAf,CAAI,CAACG,WAAL,CAAiBc,WAAjB,CAA6B,QAA7B,CACH,CAHD,IAGO,CACHjB,CAAI,CAACG,WAAL,CAAiBa,IAAjB,CAAsB,EAAtB,EACAhB,CAAI,CAACG,WAAL,CAAiBe,QAAjB,CAA0B,QAA1B,CACH,CACJ,CARD,CAaAlB,CAAI,CAACW,UAAL,CAAkB,UAAW,CACzBX,CAAI,CAACc,WAAL,CAAiB,CAAjB,CACH,CAFD,CAIA,MAAO,CACHb,IAAI,CAAED,CAAI,CAACC,IADR,CAGV,CAlEC,CAAN","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   theme_charteredcollege\n * @author    David Castro <david.castro@blackboard.com>\n * @copyright Copyright (c) 2017 Blackboard Inc.\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module theme_charteredcollege/conversation_badge_count-lazy\n */\ndefine(['jquery', 'core/ajax'],\n    function($, Ajax) {\n        var self = this;\n\n        /**\n         * Initialising function.\n         * @param {int} userid The user id\n         */\n        self.init = function(userid) {\n            self.userid = userid;\n            // Container.\n            self.containerEl = $('.conversation_badge_count');\n            self.queryCount();\n        };\n\n        /**\n         * Count the number of unread conversations (one or more messages from a user)\n         * for a given user.\n         *\n         * @param {object} args The request arguments:\n         * @return {object} jQuery promise\n         */\n        self.countUnreadConversations = function(args) {\n            var request = {\n                methodname: 'core_message_get_unread_conversations_count',\n                args: args\n            };\n\n            var promise = Ajax.call([request])[0];\n\n            promise.fail(self.resetCount);\n\n            return promise;\n        };\n\n        /**\n         * Query message repository for conversation count.\n         */\n        self.queryCount = function() {\n            self.countUnreadConversations({useridto: self.userid}).then(self.updateCount);\n        };\n\n        /**\n         * Updates the badge conversation count.\n         * @param {int} count\n         */\n        self.updateCount = function(count) {\n            if (count > 0) {\n                self.containerEl.text(count);\n                self.containerEl.removeClass(\"hidden\");\n            } else {\n                self.containerEl.text('');\n                self.containerEl.addClass(\"hidden\");\n            }\n        };\n\n        /**\n         * Resets the count to 0\n         */\n        self.resetCount = function() {\n            self.updateCount(0);\n        };\n\n        return {\n            init: self.init\n        };\n    }\n);\n"],"file":"conversation_badge_count-lazy.min.js"}